{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory20210908"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Power query demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery2",
								"type": "DataFlowReference"
							},
							"staging": {
								"linkedService": {
									"referenceName": "Blobstorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"sinks": {
								"UserQuery": {
									"name": "SinkAzureSynapseAnalyticsTable3",
									"dataset": {
										"referenceName": "AzureSynapseAnalyticsTable3",
										"type": "DatasetReference"
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDato as timestamp,\n\t\tNewPositive as integer,\n\t\tPosPct as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tNewPositive,\n\t\tPosPct,\n\t\tDato = Date\n\t)) ~> SinkAzureSynapseAnalyticsTable3"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-08T11:09:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "positiveovertidfil",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> positiveovertidfil",
							"dataset": {
								"referenceName": "positiveovertidfil",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared positiveovertidfil = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://datalake20210906.dfs.core.windows.net/coviddata/Test_pos_over_time.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \";\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = positiveovertidfil,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Date\", \"NewPositive\", \"PosPct\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed other columns\", each Text.Contains([Date], \"-\")),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Filtered rows\", \".\", \"\", Replacer.ReplaceText, {\"NewPositive\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \",\", \".\", Replacer.ReplaceText, {\"PosPct\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Replaced value 1\", {{\"NewPositive\", Int64.Type}, {\"PosPct\", type number}, {\"Date\", type date}})\r\nin\r\n  #\"Changed column type\";\r\n"
				}
			},
			"dependsOn": []
		}
	]
}