{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory20210908"
		},
		"Blobstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blobstorage'"
		},
		"synapsepool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapsepool'"
		},
		"Datalake20210906_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalake20210906.dfs.core.windows.net"
		},
		"ssifileservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://files.ssi.dk/covid19/overvagning/data/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Blobstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blobstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake20210906')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Datalake20210906_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ssifileservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ssifileservice_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsepool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapsepool_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapsepool",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataFromFactory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapsepool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapsepool",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Dato",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NewPositive",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PosPct",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapsepool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapsepool",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Dato",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NewPositive",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PosPct",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19DataOnsdag"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapsepool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/coronazipfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ssifileservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dailyfilename": {
						"type": "string",
						"defaultValue": "overvaagningsdata-covid19-07092021-lx0y"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().dailyfilename",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ssifileservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake20210906",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ssicoviddata",
						"fileSystem": "datafactorydata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake20210906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/positiveovertidfil')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalake20210906",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Test_pos_over_time.csv",
						"fileSystem": "coviddata"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "NewPositive",
						"type": "String"
					},
					{
						"name": "NotPrevPos",
						"type": "String"
					},
					{
						"name": "PosPct",
						"type": "String"
					},
					{
						"name": "PrevPos",
						"type": "String"
					},
					{
						"name": "Tested",
						"type": "String"
					},
					{
						"name": "Tested_kumulativ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalake20210906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dowload og udpak csvfiler')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "hent zipfil",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "coronazipfile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csvfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-08T09:45:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/coronazipfile')]",
				"[concat(variables('factoryId'), '/datasets/csvfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ssi zip file automation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ssi web page",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://covid19.ssi.dk/overvagningsdata/download-fil-med-overvaagningdata",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Set web page content",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ssi web page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "webpageContent",
							"value": {
								"value": "@activity('Get ssi web page').output.Response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set current date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set web page content",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "currentDate",
							"value": {
								"value": "@formatDateTime(adddays(utcnow(),-0),'ddMMyyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set current date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "zipfilename",
							"value": {
								"value": "@substring(variables('webpageContent'),indexof(variables('webpageContent'),concat('overvaagningsdata-covid19-',variables('currentDate'),'-')),add(length(concat('overvaagningsdata-covid19-',variables('currentDate'),'-')),4))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "coronazipfile",
								"type": "DatasetReference",
								"parameters": {
									"dailyfilename": {
										"value": "@variables('zipfilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csvfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"webpageContent": {
						"type": "String"
					},
					"zipfilename": {
						"type": "String"
					},
					"currentDate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-08T11:22:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/coronazipfile')]",
				"[concat(variables('factoryId'), '/datasets/csvfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "positiveovertidfil",
								"type": "DatasetReference"
							},
							"name": "positiveovertid"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "kundatoer"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tDate as string,\n\t\tNewPositive as string,\n\t\tNotPrevPos as string,\n\t\tPosPct as string,\n\t\tPrevPos as string,\n\t\tTested as string,\n\t\tTested_kumulativ as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> positiveovertid\npositiveovertid filter(like(Date,'%-%')) ~> kundatoer\nkundatoer derive(Date = toDate(Date,'yyyy-MM-dd')) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tDate,\n\t\tTested = NewPositive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/positiveovertidfil')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "positiveovertidfil",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> positiveovertidfil",
							"dataset": {
								"referenceName": "positiveovertidfil",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared positiveovertidfil = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://datalake20210906.dfs.core.windows.net/coviddata/Test_pos_over_time.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \";\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = positiveovertidfil,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Date\", \"NewPositive\", \"PosPct\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed other columns\", each Text.Contains([Date], \"-\")),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Filtered rows\", \".\", \"\", Replacer.ReplaceText, {\"NewPositive\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \",\", \".\", Replacer.ReplaceText, {\"PosPct\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Replaced value 1\", {{\"NewPositive\", Int64.Type}, {\"PosPct\", type number}})\r\nin\r\n  #\"Changed column type\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/positiveovertidfil')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "positiveovertidfil",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> positiveovertidfil",
							"dataset": {
								"referenceName": "positiveovertidfil",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared positiveovertidfil = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://datalake20210906.dfs.core.windows.net/coviddata/Test_pos_over_time.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \";\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = positiveovertidfil,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Date\", \"NewPositive\", \"PosPct\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed other columns\", each Text.Contains([Date], \"-\")),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Filtered rows\", \".\", \"\", Replacer.ReplaceText, {\"NewPositive\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \",\", \".\", Replacer.ReplaceText, {\"PosPct\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Replaced value 1\", {{\"NewPositive\", Int64.Type}, {\"PosPct\", type number}, {\"Date\", type date}})\r\nin\r\n  #\"Changed column type\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/positiveovertidfil')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demo af dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transformer en csv fil",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"positiveovertid": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "Datalake20210906",
									"type": "LinkedServiceReference"
								},
								"folderPath": "datafactorydata"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-08T09:26:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/linkedServices/Datalake20210906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Power query demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery2",
								"type": "DataFlowReference",
								"datasetParameters": {
									"positiveovertidfil": {},
									"SinkAzureSynapseAnalyticsTable3": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "Blobstorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"sinks": {
								"UserQuery": {
									"name": "SinkAzureSynapseAnalyticsTable3",
									"dataset": {
										"referenceName": "AzureSynapseAnalyticsTable3",
										"type": "DatasetReference",
										"parameters": {}
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDato as timestamp,\n\t\tNewPositive as integer,\n\t\tPosPct as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDato = Date,\n\t\tPosPct\n\t)) ~> SinkAzureSynapseAnalyticsTable3"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-08T11:09:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery2')]",
				"[concat(variables('factoryId'), '/linkedServices/Blobstorage')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"positiveovertidfil": {},
									"SinkAzureSynapseAnalyticsTable2": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "Blobstorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"sinks": {
								"UserQuery": {
									"name": "SinkAzureSynapseAnalyticsTable2",
									"dataset": {
										"referenceName": "AzureSynapseAnalyticsTable2",
										"type": "DatasetReference",
										"parameters": {}
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDato as timestamp,\n\t\tNewPositive as integer,\n\t\tPosPct as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkAzureSynapseAnalyticsTable2"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-09-08T10:17:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]",
				"[concat(variables('factoryId'), '/linkedServices/Blobstorage')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hverdage kl 14')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ssi zip file automation",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-09-08T11:22:00",
						"endTime": "2021-09-09T11:22:00",
						"timeZone": "Romance Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ssi zip file automation')]"
			]
		}
	]
}