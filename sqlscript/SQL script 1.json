{
	"name": "SQL script 1",
	"properties": {
		"content": {
			"query": "-- This is auto-generated code\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK 'https://datalake20210906.dfs.core.windows.net/raspberry/data2021_09_06_11_03_49.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK 'https://datalake20210906.dfs.core.windows.net/raspberry/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n\n--https://datalake20210906.dfs.core.windows.net/raspberry\n\n-- Vi laver vores egen database i serverless pool\n\n-- se https://docs.microsoft.com/en-us/sql/t-sql/statements/create-database-transact-sql?view=azure-sqldw-latest&preserve-view=true&tabs=sqlod\n-- vi kan kun vælge navn og collation her\nCREATE DATABASE ServerLessDB\n\nSELECT      * fROM sys.databases\n\nUSE serverlessDB\n\n-- vi kan oprette en datasource som gemmes i vores database\n\nCREATE EXTERNAL DATA SOURCE RaspberryContainer\nWITH\n(\n   LOCATION= 'https://datalake20210906.dfs.core.windows.net/raspberry'\n)\n\n\nSELECT\n    count(*)\nFROM\n    OPENROWSET(\n        BULK '*.csv',\n        DATA_SOURCE = 'RaspberryContainer',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n\n\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'data2021_09_06_11_03_49.csv',\n        DATA_SOURCE = 'RaspberryContainer',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n-- vi kan angive skema\n\nSELECT\n     *\nFROM\n    OPENROWSET(\n        BULK 'data2021_09_06_11_03_49.csv',\n        DATA_SOURCE = 'RaspberryContainer',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n\nSELECT\n     *, CAST(datotid AS DATETIME2)  AS Dato\nFROM\n    OPENROWSET(\n        BULK 'data2021_09_06_11_03_49.csv',\n        DATA_SOURCE = 'RaspberryContainer',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) \n    WITH\n    (\n        SensorId    INT 1,      -- første kolonne i filen har nr 1\n        DatoTid     NVARCHAR(20) 2,\n         --DatoTid     DATETIME2 2,\n        TemperaturFraTryk  DECIMAL(9,6) 4,\n        Humidity    DECIMAL(9,6) 5,    \n        Pressure    DECIMAL(19,6) 6\n    ) AS [result]\n\n\n\n\n--CREATE TABLE <table_name> is not supported\n-- vi kan ikke lave almindelige tabeller i en serverless pool\nCREATE TABLE dbo.MyTable\n(\n    kolonne1 INT\n)\n\n-- CREATE External table \n\nCREATE EXTERNAL TABLE dbo.RaspberryData AS\n\nSELECT\n     *\nFROM\n    OPENROWSET(\n        BULK 'data2021_09_06_11_03_49.csv',\n        DATA_SOURCE = 'RaspberryContainer',\n        FORMAT = 'CSV',\n        PARSER_VERSION='2.0',\n        HEADER_ROW = TRUE\n    ) AS [result]\n\n\n\n-- parquet \n-- den har skemaet i sig\n\n-- PARQUET\n\n-- Parquet eksempler fra Skillpipe materiale i modul 2\n\n-- udpeg blob storage direkte\nselect top 10 *\nfrom openrowset(\n    bulk 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.parquet',\n    format = 'parquet') as covidTable\n\n\ncreate external data source covid\nwith ( location = 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases' ); go\n\n\n-- læs data fra external data source covid\nselect top 10 *\nfrom openrowset(\n    bulk 'latest/ecdc_cases.parquet',\n    data_source = 'covid',\n    format = 'parquet'\n) with (\n    date_rep date,\n    cases int,\n    geo_id varchar(6)\n) as rows\n\n\n-- Yellow taxies\n\n-- yellow taxies\ncreate external data source yellowTaxi\nwith ( location = 'https://azureopendatastorage.blob.core.windows.net/nyctlc/yellow/' );\n\n-- vis gerne graf med bar chart her\nSELECT\n    YEAR(tpepPickupDateTime),\n    passengerCount,\n    COUNT(*) AS cnt\nFROM\n    OPENROWSET(\n        BULK 'puYear=2018/puMonth=*/*.snappy.parquet',\n        DATA_SOURCE = 'YellowTaxi',\n        FORMAT='PARQUET'\n    ) WITH (\n        tpepPickupDateTime DATETIME2,\n        passengerCount INT\n    ) AS nyc\nGROUP BY\n    passengerCount,\n    YEAR(tpepPickupDateTime)\nORDER BY\n    YEAR(tpepPickupDateTime),\n    passengerCount;\n\n\n\n\nSELECT TOP 10 nyc.filepath(),nyc.filepath(1),nyc.filepath(2),* \nFROM\n    OPENROWSET(\n        BULK 'puYear=2018/puMonth=*/*.snappy.parquet',\n        DATA_SOURCE = 'YellowTaxi',\n        FORMAT='PARQUET'\n    ) AS nyc    \n\n\n\n--- json \n-- NB læg mærke til vi skriver csv som format...\nselect top 10 *\nfrom\n    openrowset(\n        bulk 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.jsonl',\n        format = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b'\n    ) with (doc nvarchar(max)) as rows\n\n\ncreate external data source covidjson\nwith (location = 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases');\n\n\n-- vi skal selv pakke json strengen ud med en funktion\n\nselect\n    JSON_VALUE(doc, '$.date_rep') AS date_reported,\n    JSON_VALUE(doc, '$.countries_and_territories') AS country,\n    JSON_VALUE(doc, '$.cases') as cases,\n    doc\nfrom\n    openrowset(\n        bulk 'latest/ecdc_cases.jsonl',\n        data_source = 'covidjson',\n        format = 'csv',\n        fieldterminator ='0x0b',\n        fieldquote = '0x0b'\n    ) with (doc nvarchar(max)) as rows\norder by JSON_VALUE(doc, '$.geo_id') desc\n\n\n-- Vi laver adgang til storage account via SAS - - shared access signature\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD='Pa55w.rdMegetHemmeligt!'\n\n\nCREATE DATABASE SCOPED CREDENTIAL sqlondemand\nWITH IDENTITY='SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2018-03-28&ss=bf&srt=sco&sp=rl&st=2019-10-14T12%3A10%3A25Z&se=2061-12-31T12%3A10%3A00Z&sig=KlSU2ullCscyTS0An0nozEpo4tO5JAgGBvw%2FJX2lguw%3D'\n\n-- nu laver vi datakilden som skal anvende dette credential\n\nCREATE EXTERNAL DATA SOURCE SqlOnDemandDemo WITH (\n    LOCATION = 'https://sqlondemandstorage.blob.core.windows.net',\n    CREDENTIAL = sqlondemand\n);\n\nSELECT\n    YEAR(pickup_datetime) AS [year],\n    SUM(passenger_count) AS passengers_total,\n    COUNT(*) AS [rides_total]\nFROM\n    OPENROWSET(\n        BULK 'csv/taxi/yellow_tripdata_2016-07.csv',\n        DATA_SOURCE = 'SqlOnDemandDemo',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        FIRSTROW = 2\n    ) WITH (\n        pickup_datetime DATETIME2 2,\n        passenger_count INT 4\n    ) AS nyc\nGROUP BY\n    YEAR(pickup_datetime)\nORDER BY\n    YEAR(pickup_datetime);\n\n\n\nCREATE VIEW dbo.YellowTaxiData AS \nSELECT\n    YEAR(pickup_datetime) AS [year],\n    SUM(passenger_count) AS passengers_total,\n    COUNT(*) AS [rides_total]\nFROM\n    OPENROWSET(\n        BULK 'csv/taxi/yellow_tripdata_2016-07.csv',\n        DATA_SOURCE = 'SqlOnDemandDemo',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        FIRSTROW = 2\n    ) WITH (\n        pickup_datetime DATETIME2 2,\n        passenger_count INT 4\n    ) AS nyc\nGROUP BY\n    YEAR(pickup_datetime)\n\n\nSELECT  * \nFROM dbo.YellowTaxiData\n\n\nCREATE SCHEMA ext\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET );\n\nCREATE EXTERNAL TABLE ext.Taxi (\n    vendor_id VARCHAR(100) COLLATE Latin1_General_BIN2,\n    pickup_datetime DATETIME2,\n    dropoff_datetime DATETIME2,\n    passenger_count INT,\n    trip_distance FLOAT,\n    fare_amount FLOAT,\n    tip_amount FLOAT,\n    tolls_amount FLOAT,\n    total_amount FLOAT\n) WITH (\n        LOCATION = 'puYear=*/puMonth=*/*.parquet',\n        DATA_SOURCE = YellowTaxi,\n        FILE_FORMAT = ParquetFormat\n);\n\nselect      *\nfrom        sys.external_data_sources\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "ServerLessDB",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}